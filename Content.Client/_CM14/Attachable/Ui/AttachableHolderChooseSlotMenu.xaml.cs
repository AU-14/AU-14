using System.Numerics;
using Content.Client.Message;
using Content.Client.Stylesheets;
using Content.Client.UserInterface.Controls;
using Content.Shared._CM14.Attachable;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Utility;
using static Robust.Client.UserInterface.Controls.BoxContainer;


namespace Content.Client._CM14.Attachable.Ui;

[GenerateTypedNameReferences]
public sealed partial class AttachableHolderChooseSlotMenu : FancyWindow//Control
{
    private readonly AttachableHolderChooseSlotBoundUserInterface boundUI;
    private Dictionary<string, AttachableSlotControl> _attachableSlotControls;
    
    
    public AttachableHolderChooseSlotMenu(AttachableHolderChooseSlotBoundUserInterface boundUI)
    {
        this.boundUI = boundUI;
        _attachableSlotControls = new Dictionary<string, AttachableSlotControl>();
        
        OnClose += () => { boundUI.Close(); };
        
        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);
    }
    
    
    public void UpdateMenu(List<string> attachableSlots)
    {
        foreach(string slotID in attachableSlots)
            if(!_attachableSlotControls.ContainsKey(slotID))
                AddSlotControl(slotID);
    }
    
    private void AddSlotControl(string slotID)
    {
        AttachableSlotControl slotControl = new AttachableSlotControl(this, boundUI, slotID);
        SlotsContainer.AddChild(slotControl);
        _attachableSlotControls.Add(slotID, slotControl);
    }
    
    
    private sealed class AttachableSlotControl : Control
    {
        private string slotID;
        
        
        public AttachableSlotControl(AttachableHolderChooseSlotMenu slotMenu, AttachableHolderChooseSlotBoundUserInterface boundUI, string slotID)
        {
            this.slotID = slotID;
            
            Button button = new Button
            {
                Text = Loc.GetString(slotID)//,
                //StyleClasses = { StyleBase.ButtonOpenRight }
            };
            
            button.OnPressed += args => { boundUI.SendMessage(new AttachableHolderAttachToSlotMessage(this.slotID)); slotMenu.Close(); };
            AddChild(button);
        }
    }
}
